@page "/"
@using System.Text.Json
@using BlazorPortfolio.Models;
@using System.Globalization
@inject NavigationManager NavigationManager
<PageTitle>Jordy Schoolmeesters — Computer Scientist</PageTitle>

<div class="w-full relative">
   @*
   <div class="relative w-[100vw] max-w-[500px] h-[100vw] max-h-[500px] mb-8">
      <canvas id="renderCanvas" class="w-full h-full"></canvas>
      <img src="media/tribal.png" class="trib mix-blend-color-burn absolute bottom-0 left-0 w-[75%] z-10 px-4 py-8">
   </div>
   *@

   @*
   <div class="m-3 border rounded border-white relative block bg-black">
      <div class="p-3">
         <h1 class="text-4xl tracking-tighter uppercase p-0 m-0 leading-none">Jordy</h1>
         <h1 class="text-4xl uppercase p-0 m-0 leading-none">Schoolmeesters</h1>
         <h2 class="text-xs uppercase p-0 m-0 mt-3">Venlo, Netherlands</h2>
         <h2 class="text-xs uppercase p-0 m-0 mt-3">Computing Science student</h2>
      </div>
      <div id="navbar-trigger" class="w-full p-3 h-[3.75rem] overflow-hidden mt-4 border-t border-white">
         <div class="wrapper">
            <div class="marquee">
               <p class="align-middle tracking-normal text-4xl h-[3rem] leading-none uppercase">✦Welcome to my page</p>
               <p class="align-middle tracking-normal text-4xl h-[3rem] leading-none uppercase">✦Welcome to my page</p>
            </div>
         </div>
      </div>
   </div>
   
   <div class="p-4 flex flex-col items-start">
      <div class="overflow-hidden">
         <div class="flex text-3xl" style="translate: none; rotate: none; scale: none; transform: translate(0px, 0px);">
            <span class="helvetica-neue-medium text-slideup animation-delay-1">Computing Science student specializing in high performance computing and embedded systems.</span>
         </div>
      </div>
   </div>*@

   <div class="p-3 pb-9 mt-16">
      <h2 class="text-sm p-0 m-0 mb-2">About me</h2>

      <p class="text-2xl tracking-[-0.035em] leading-none">Computing Science student, C# developer and music producer specializing in high performance computing and embedded systems.</p><br>
      <p class="text-2xl tracking-[-0.035em] leading-none">Here, I'll be sharing my progress, insights, tutorials and tips on all things coding and music production.</p><br>
      <p class="text-2xl tracking-[-0.035em] leading-none">Currently working at Archive-IT, based in Reuver, the Netherlands.</p>
   </div>
   <div class="px-3 bg-white dark:bg-black">
      <h2 class="text-sm p-0 m-0 pt-6 mb-2">Current projects</h2>
      <ul class="text-2xl tracking-[-0.035em] leading-none">
         <li>MIT OCW courses on C/C++</li>
         <li>Making an RTOS for an ARM CORTEX© M4 based microcontroller</li>
      </ul>

      <h2 class="text-sm p-0 m-0 mt-12 mb-2">Current goals</h2>
      <ul class="text-2xl tracking-[-0.035em] leading-none">
         <li>Excelling at C/C++</li>
         <li>Refreshing Bash/Python skills</li>
         <li><a href="https://www.ru.nl/courseguides/science/bachelor/bachelor-computing-science/">Computing Science bachelor</a></li>
      </ul>

      <img class="border border-black dark:border-none w-full mt-12 rounded" src="https://i.seadn.io/gcs/files/396a124e569b6ee79d34a010035f2da0.png?auto=format&dpr=1&w=1000">

      <BlazorPortfolio.Components.Links />

      <h2 class="text-sm p-0 m-0 mt-12 mb-2 first-child:">Latest posts</h2>

      @foreach (var item in FilteredPosts) {
         var post = item.post;
         var index = item.i;

         <div class="cursor-pointer border-t border-b py-3 border-black dark:border-white flex flex-row" @onclick="@(() => NavigateToPost(post))">
            <div class="pr-3">
               <span class="leading-none">@(index < 10 ? "0" + (index + 1) : (index + 1))</span>
            </div>
            <div class="grow flex flex-col">
               <h2 class="text-2xl tracking-[-0.035em] leading-none">@post.Title</h2>
               <div class="mt-1.5">
                  @foreach (string tag in post.TagsAsList) {
                     <div class="badge align-middle text-xs bg-transparent rounded-full text-black dark:text-white border border-black dark:border-white mr-2 uppercase">@tag</div>
                  }
               </div>
               <div class="flex flex-row mt-3">
                  <div class="basis-1/2 text-stone-600"><span>@post.DateAsUriString</span></div>
                  <div class="basis-1/2 text-end"><span class="">x min read <span class="iconoir-arrow-right align-middle"></span></span></div>
               </div>
            </div>
         </div>

      }

      @*
      @foreach (var item in FilteredPosts) {
         var post = item.post;
         var index = item.i;

         <div @onclick="@(() => NavigateToPost(post))" class="cursor-pointer my-3 border rounded border-black dark:border-white relative block">
            <div class="p-4">
               <div class="flex flex-row justify-between">
                  <h2 class="text-xs uppercase p-0 m-0 text-start">@String.Join(", ", post.Tags.Split(',').Order())</h2>
                  <h2 class="text-xs uppercase p-0 m-0 text-end">@post.DateAsUriString</h2>
               </div>
               <h1 class="text-3xl tracking-tighter uppercase p-0 m-0 mt-3 leading-none">@post.Title</h1>
               <p class="text-lg tracking-[-0.035em] leading-none mt-6">@post.Description</p>
            </div>
            <div class="w-full p-3 h-[3.75rem] overflow-hidden border-t border-black dark:border-white">
               <p class="align-middle tracking-normal text-4xl h-[3rem] leading-none uppercase">Read✦</p>
            </div>
         </div>
      }
      *@

      <div class="text-lg grid grid-cols-2 gap-y-3 pt-12 pb-6">
         <div class="col-span-2">(© 2024 Jordy Schoolmeesters)</div>
         <div>Back to top <span class="iconoir-arrow-up align-middle"></span></div>
         <div class="text-end">Shift + G</div>
      </div>
   </div>
</div>

@code {
   [Inject]
   private HttpClient HttpClient { get; set; }
   private List<Models.Post> Posts { get; set; } = new List<Models.Post>();
   private string SearchValue { get; set; } = String.Empty;
   private List<(Models.Post post, int i)> FilteredPosts
   {
      get
      {
         return Posts.Where(p => string.IsNullOrEmpty(SearchValue) ? true : p.Title.ToLower().Contains(SearchValue.ToLower()))
                                 .OrderBy(p => p.DateAsDateTime)
                                 .Take(3)
                                 .Select((post, i) => ( post, i ))
                                 .ToList();
      }
   }
   protected override async Task OnInitializedAsync()
   {
      var jsonContent = await HttpClient.GetStringAsync("posts/posts.json");
      var posts = JsonSerializer.Deserialize<List<Models.Post>>(jsonContent);
      if (posts != null)
         Posts = posts;
   }

   private void NavigateToPost(Models.Post post)
   {
      var baseUri = NavigationManager.BaseUri;
      NavigationManager.NavigateTo(Path.Combine(baseUri, "blog", "post", post.DateAsUriString, post.Id.Substring(post.Id.LastIndexOf('/') + 1)));
   }

   private void HandleInputChange(ChangeEventArgs e)
   {
      SearchValue = e.Value.ToString();
   }
}