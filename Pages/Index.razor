@page "/"
@using System.Text.Json
@using BlazorPortfolio.Models;
@using System.Globalization
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
<PageTitle>Jordy Schoolmeesters — Computing Science</PageTitle>

<div class="scroll gsap-animate-transition z-[1] absolute left-1/2 translate-x-[-50%] bottom-0 pb-4">
   <div class="relative text-lg tracking-[-0.035em] px-3 py-1 bg-black text-white dark:bg-white dark:text-black rounded-full cursor-pointer">
      <span>Scroll</span><span class="ml-2 iconoir-arrow-down align-middle"></span>
   </div>  
</div>

<div class="w-full relative">

   <div class="p-3 pb-9  bg-stone-100 dark:bg-black relative">

      <div class="flex flex-row border-t-2 border-black dark:border-white border-dashed">
         <img src="media/newhero.svg" class="hero dark:invert"/>
         <div class="grow border-l-2 border-dashed border-black dark:border-white p-3">
            <h1 class="text-2xl tracking-[-0.035em] leading-none">Jordy</h1>
            <h2 class="text-2xl tracking-[-0.035em] leading-none">Schoolmeesters</h2>
         </div>
      </div>

      <div class="about gsap-animate-transition">
         <h2 class="about-first gsap-lines gsap-animate-transition text-sm p-0 m-0 mb-2">
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  About me
               </div>
            </div>
         </h2>

         <h1 class="about-first gsap-lines gsap-animate-transition text-2xl tracking-[-0.035em] leading-none">
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  Computing Science student, C#
               </div>
            </div>
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  developer and music producer
               </div>
            </div>
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  specializing in high performance
               </div>
            </div>
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  computing and embedded systems.
               </div>
            </div>
         </h1>
         <br>
         <h1 class="about-rest gsap-lines gsap-animate-transition text-2xl tracking-[-0.035em] leading-none">
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  Here, I'll be sharing my progress,
               </div>
            </div>
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  insights, tutorials and tips on all
               </div>
            </div>
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  things coding and music production.
               </div>
            </div>
         </h1>
         <br>
         <h1 class="about-rest gsap-lines gsap-animate-transition text-2xl tracking-[-0.035em] leading-none">
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  Currently working at Archive-IT,
               </div>
            </div>
            <div class="gsap-line">
               <div class="gsap-line-inner">
                  based in Reuver, the Netherlands.
               </div>
            </div>
         </h1>
      </div>
   </div>

   <div class="bg-white dark:bg-black z-0">
      <div class="fill gsap-animate-transition inset z-[2] absolute w-[100vw] h-full bg-stone-100 dark:bg-black"></div>
      <div class="px-3">
         <h2 class="text-sm p-0 m-0 pt-6 mb-2">Current projects</h2>
         <ul class="text-2xl tracking-[-0.035em] leading-none">
            <li>MIT OCW courses on C/C++</li>
            <li>Making an RTOS for an ARM CORTEX© M4 based microcontroller</li>
         </ul>

         <h2 class="text-sm p-0 m-0 mt-12 mb-2">Current goals</h2>
         <ul class="text-2xl tracking-[-0.035em] leading-none">
            <li>Excelling at C/C++</li>
            <li>Refreshing Bash/Python skills</li>
            <li><a href="https://www.ru.nl/courseguides/science/bachelor/bachelor-computing-science/">Computing Science bachelor</a></li>
         </ul>

         <img class="border border-black dark:border-none w-full mt-12 rounded" src="https://i.seadn.io/gcs/files/396a124e569b6ee79d34a010035f2da0.png?auto=format&dpr=1&w=1000">

         <div class="links gsap-animate-transition relative overflow-hidden">
            <BlazorPortfolio.Components.Links />
         </div>
         
         <div class="posts-header gsap-animate-transition">
            <div class="gsap-line">
                  <h2 class="gsap-line-inner text-sm p-0 m-0 mt-12 mb-2">Latest posts</h2>
            </div>
         </div>

         <div class="post-border gsap-animate-transition w-full border-t border-black dark:border-white"></div>
         @foreach (var item in FilteredPosts) {
            var post = item.post;
            var index = item.i;

            <div class="post gsap-animate-transition cursor-pointer py-3 flex flex-row" @onclick="@((e) => NavigateToPost(e, post))">
               <div class="pr-3">
                  <span class="leading-none">@(index < 10 ? "0" + (index + 1) : (index + 1))</span>
               </div>
               <div class="grow flex flex-col">
                  <h2 class="text-2xl tracking-[-0.035em] leading-none">@post.Title</h2>
                  <div class="mt-1.5">
                     @foreach (string tag in post.TagsAsList) {
                        <div class="badge align-middle text-xs bg-transparent rounded-full text-black dark:text-white border border-black dark:border-white mr-2 uppercase">@tag</div>
                     }
                  </div>
                  <div class="flex flex-row mt-3">
                     <div class="basis-1/2"><span>@post.DateAsUriString</span></div>
                     <div class="basis-1/2 text-end"><span class="">5 min read →</span></div>
                  </div>
               </div>
            </div>
            <div class="post-border gsap-animate-transition w-full border-t border-black dark:border-white"></div>
         }

         <footer class="gsap-animate-transition text-lg tracking-[-0.035em] leading-none grid grid-cols-2 gap-y-3 pt-12 pb-6">
            <div>Back to top ↑</div>
            <div class="text-end">Shift + G</div>
         </footer>
      </div>
   </div>
</div>

@code {
   [Inject]
   private HttpClient HttpClient { get; set; }
   private List<Models.Post> Posts { get; set; } = new List<Models.Post>();
   private string SearchValue { get; set; } = String.Empty;
   private List<(Models.Post post, int i)> FilteredPosts
   {
      get
      {
         return Posts.Where(p => string.IsNullOrEmpty(SearchValue) ? true : p.Title.ToLower().Contains(SearchValue.ToLower()))
                                 .OrderByDescending(p => p.DateAsDateTime)
                                 .Take(3)
                                 .Select((post, i) => ( post, i ))
                                 .ToList();
      }
   }

   protected override async Task OnAfterRenderAsync(bool firstRender)
   {
      await base.OnAfterRenderAsync(firstRender);

      if (firstRender) {
         await JS.InvokeVoidAsync("homeLoaded");
        
         while (FilteredPosts.Count == 0)
            await Task.Delay(100);
         bool result = await JS.InvokeAsync<bool>("waitForPosts", FilteredPosts.Count);

         if (result)
            await JS.InvokeVoidAsync("animatePosts");
      }
   }

   public async Task PostsLoaded() {
      await JS.InvokeVoidAsync("postsLoaded");
   }

   protected override async Task OnInitializedAsync()
   {
      var jsonContent = await HttpClient.GetStringAsync("posts/posts.json");
      var posts = JsonSerializer.Deserialize<List<Models.Post>>(jsonContent);
      if (posts != null)
         Posts = posts;
   }

   private async Task NavigateToPost(MouseEventArgs e, Models.Post post)
   {
      await JS.InvokeVoidAsync("beginTransitionBox", e.ClientX, e.ClientY);
      var baseUri = NavigationManager.BaseUri;
      NavigationManager.NavigateTo(Path.Combine(baseUri, "blog", "post", post.DateAsUriString, post.Id.Substring(post.Id.LastIndexOf('/') + 1)));
   }

   private void HandleInputChange(ChangeEventArgs e)
   {
      SearchValue = e.Value.ToString();
   }
}