@page "/"
@using System.Text.Json
@using BlazorPortfolio.Models;
@using System.Globalization
@inject NavigationManager NavigationManager
<PageTitle>Jordy Schoolmeesters</PageTitle>

<div class="wrapper max-w-[500px] mx-auto">
   <div class="w-full text-[#a6a999] bg-[#141612] p-4 select-none">
   <div class=""><h2 class="inline-block bg-[#2d312a]">index.html</h2><i class="iconoir-home-simple text-xl float-right bg-[#2d312a] p-0.5"></i></div>
      
      <div class="mt-8">
         <h3 class="text-xl open-sans-400 mb-2 text-[hsla(26,28%,95%,.7)]"><span class="font-semibold"><i>Hey!</i> I'm Jordy</span> - a computing science student, C# developer and producer interested in the field of DSP. Here, I'll be sharing insights, tutorials and tips on all things DSP, coding and music production.</h3>
      <div class="join">
         <button class="btn btn-ghost btn-sm join-item open-sans-400"><i class="iconoir-github text-lg"></i>
   Github</button>
         <button class="btn btn-ghost btn-sm join-item open-sans-400"><i class="iconoir-linkedin text-lg"></i>LinkedIn</button>
         <button class="btn btn-ghost btn-sm join-item open-sans-400"><i class="iconoir-mail text-lg"></i>Email</button>
      </div>
      </div>
      <div class="mt-8 w-full">
         <div class="select-none text-tribal mb-4 h-[30vh] max-h-[40vw] hue-rotate-90 invert saturate-150">
            <mark class="bg-transparent text-[#fff]">
               <span class="mi-blend-difference text-blur inline-block py-2 opacity-50 h-full">
                  <div class="tribal-img w-full h-full"></div>
               </span>   
            </mark>         
         </div>
      </div>
   </div>

   <div class="w-full text-[#2d312a] bg-[#f6f2ef] p-4 open-sans-400 select-none">
      <span><h2 class="uppercase inline">blog</h2><i class="iconoir-rss-feed-tag text-xl float-right"></i></span>
      
      <label class="input input-bordered input-search flex items-center gap-2 mt-4">
         <input type="text" class="grow" placeholder="Search..." @oninput="@HandleInputChange" @bind-value="@SearchValue"/>
         <i class="iconoir-search text-2xl"></i>
      </label>
      
      @foreach (var item in Posts.Where(p => string.IsNullOrEmpty(SearchValue) ? true : p.Title.ToLower().Contains(SearchValue.ToLower()))
                                 .OrderBy(p => p.DateAsDateTime)
                                 .Take(3)
                                 .Select((post, i) => ( post, i ))) {
         var post = item.post;
         var index = item.i;
         <div @onclick="@(() => NavigateToPost(post))" class="my-4 hover:cursor-pointer post-preview">
            <h2 class="text-2xl">@post.Title</h2>
            <div class="text-lg">@post.Date</div>
            <div>
               @* TODO: add sorting to tags *@
               @foreach (string tag in post.Tags.Split(',').Order()) {
                  <div class="badge bg-[#2d312a] text-[hsla(26,28%,95%,.7)] ml-1">@tag</div>
               }
            </div>
         </div>
         @if (index < Posts.Count - 1) {
            <div class="w-full h-[1px] bg-[#2d312a] my-4"></div>
         }
      }

   </div>

   <div class="w-full bg-[hsla(26,28%,95%,.9)] text-[#2d312a] px-4 pb-4 select-none">
      <span class="block"><h2 class="inline-block uppercase mt-4">footer</h2><i class="iconoir-arrow-up text-xl hover:bg-[#00000010] hover:cursor-pointer float-right p-3 mt-2 rounded-lg"></i></span>
      <div class="mt-4">
         <h3 class="text-md open-sans-400 mb-2 inline">© 2024 <span @onclick="@(() => NavigationManager.NavigateTo("."))" class="underline cursor-pointer">Jordy Schoolmeesters</span></h3>
         <span>-</span>
         <a href="https://github.com/jschoolmeesters/BlazorPortfolio"><h3 class="text-md open-sans-400 mb-2 inline underline cursor-pointer">Source code</h3></a>
         <span>-</span>
         <h3 class="text-md open-sans-400 mb-2 inline underline cursor-pointer">Changelog</h3>
      </div>
   </div>
</div>

@code {
   [Inject]
   private HttpClient HttpClient { get; set; }
   private List<Models.Post> Posts { get; set; } = new List<Models.Post>();
   private string SearchValue { get; set; } = String.Empty;


   protected override async Task OnInitializedAsync()
   {
      var jsonContent = await HttpClient.GetStringAsync("posts/posts.json");
      var posts = JsonSerializer.Deserialize<List<Models.Post>>(jsonContent);
      if (posts != null)
         Posts = posts;

      Console.WriteLine("hohoho");
   }

   private void NavigateToPost(Models.Post post)
   {
      NavigationManager.NavigateTo("post/" + post.Date + "/" + post.Id);
   }

   private void HandleInputChange(ChangeEventArgs e)
   {
      SearchValue = e.Value.ToString();
   }
}